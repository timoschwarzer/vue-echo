{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///build.js","webpack:///webpack/bootstrap 02868c44c1c813ff768f","webpack:///./vue-echo.js","webpack:///./~/laravel-echo/dist/echo.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","prototype","_laravelEcho","_laravelEcho2","install","Vue","options","Error","socketId","$echo","mixin","created","channel","$options","startsWith","private","replace","join","events","keys","forEach","key","_this","listen","payload","beforeDestroy","unsubscribe","classCallCheck","AwaitValue","AsyncGenerator","gen","send","arg","Promise","resolve","reject","request","next","back","front","resume","result","then","settle","done","err","type","_invoke","return","undefined","asyncIterator","throw","wrap","fn","apply","arguments","await","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","protoProps","staticProps","_extends","assign","source","hasOwnProperty","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","Connector","_defaultOptions","auth","headers","authEndpoint","broadcaster","csrfToken","host","namespace","setOptions","connect","selector","window","document","querySelector","getAttribute","Channel","callback","event","EventFormatter","setNamespace","charAt","substr","PusherChannel","_Channel","pusher","name","getPrototypeOf","eventFormatter","subscribe","subscription","on","format","unbind","bind","PusherPrivateChannel","_PusherChannel","eventName","data","channels","trigger","PusherPresenceChannel","members","map","k","member","info","SocketIoChannel","socket","configureReconnector","emit","_this2","listener","_this3","push","_this4","removeListener","SocketIoPrivateChannel","_SocketIoChannel","SocketIoPresenceChannel","_SocketIoPrivateChann","user_info","PusherConnector","_Connector","_ref","_len","args","Array","_key","concat","Pusher","index","connection","socket_id","disconnect","SocketIoConnector","io","Echo","http","registerVueRequestInterceptor","axios","registerAxiosRequestInterceptor","jQuery","registerjQueryAjaxSetup","connector","interceptors","set","use","config","ajax","ajaxSetup","beforeSend","xhr","setRequestHeader","_channel","privateChannel","presenceChannel","leave"],"mappings":"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","file":"build.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueEcho\"] = factory();\n\telse\n\t\troot[\"VueEcho\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VueEcho\"] = factory();\n\telse\n\t\troot[\"VueEcho\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _laravelEcho = __webpack_require__(2);\n\t\n\tvar _laravelEcho2 = _interopRequireDefault(_laravelEcho);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    install: function install(Vue, options) {\n\t        if (!options) {\n\t            throw new Error(\"[Vue-Echo] cannot locate options\");\n\t        }\n\t\n\t        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n\t            throw new Error(\"[Vue-Echo] cannot initiate options\");\n\t        }\n\t\n\t        if (typeof options.socketId == 'function') {\n\t            Vue.prototype.$echo = options;\n\t        } else {\n\t            Vue.prototype.$echo = new _laravelEcho2.default(options);\n\t        }\n\t\n\t        Vue.mixin({\n\t            created: function created() {\n\t                var channel = this.$options['channel'];\n\t\n\t                if (channel) {\n\t                    if (channel.startsWith('private:')) {\n\t                        this.channel = this.$echo.private(channel.replace('private:', ''));\n\t                    } else if (channel.startsWith('presence:')) {\n\t                        this.channel = this.$echo.join(channel.replace('presence:', ''));\n\t                    } else {\n\t                        this.channel = this.$echo.channel(channel);\n\t                    }\n\t\n\t                    var events = this.$options['echo'];\n\t\n\t                    if (events) {\n\t                        Object.keys(events).forEach(function (key) {\n\t                            var _this = this;\n\t\n\t                            // Bind the VM as second parameter\n\t                            this.channel.listen(key, function (payload) {\n\t                                events[key](payload, _this);\n\t                            });\n\t                        }, this);\n\t                    }\n\t                }\n\t            },\n\t            beforeDestroy: function beforeDestroy() {\n\t                if (this.$options['channel']) {\n\t                    this.channel.unsubscribe();\n\t                }\n\t            }\n\t        });\n\t    }\n\t};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tvar asyncGenerator = function () {\n\t  function AwaitValue(value) {\n\t    this.value = value;\n\t  }\n\t\n\t  function AsyncGenerator(gen) {\n\t    var front, back;\n\t\n\t    function send(key, arg) {\n\t      return new Promise(function (resolve, reject) {\n\t        var request = {\n\t          key: key,\n\t          arg: arg,\n\t          resolve: resolve,\n\t          reject: reject,\n\t          next: null\n\t        };\n\t\n\t        if (back) {\n\t          back = back.next = request;\n\t        } else {\n\t          front = back = request;\n\t          resume(key, arg);\n\t        }\n\t      });\n\t    }\n\t\n\t    function resume(key, arg) {\n\t      try {\n\t        var result = gen[key](arg);\n\t        var value = result.value;\n\t\n\t        if (value instanceof AwaitValue) {\n\t          Promise.resolve(value.value).then(function (arg) {\n\t            resume(\"next\", arg);\n\t          }, function (arg) {\n\t            resume(\"throw\", arg);\n\t          });\n\t        } else {\n\t          settle(result.done ? \"return\" : \"normal\", result.value);\n\t        }\n\t      } catch (err) {\n\t        settle(\"throw\", err);\n\t      }\n\t    }\n\t\n\t    function settle(type, value) {\n\t      switch (type) {\n\t        case \"return\":\n\t          front.resolve({\n\t            value: value,\n\t            done: true\n\t          });\n\t          break;\n\t\n\t        case \"throw\":\n\t          front.reject(value);\n\t          break;\n\t\n\t        default:\n\t          front.resolve({\n\t            value: value,\n\t            done: false\n\t          });\n\t          break;\n\t      }\n\t\n\t      front = front.next;\n\t\n\t      if (front) {\n\t        resume(front.key, front.arg);\n\t      } else {\n\t        back = null;\n\t      }\n\t    }\n\t\n\t    this._invoke = send;\n\t\n\t    if (typeof gen.return !== \"function\") {\n\t      this.return = undefined;\n\t    }\n\t  }\n\t\n\t  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n\t    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n\t      return this;\n\t    };\n\t  }\n\t\n\t  AsyncGenerator.prototype.next = function (arg) {\n\t    return this._invoke(\"next\", arg);\n\t  };\n\t\n\t  AsyncGenerator.prototype.throw = function (arg) {\n\t    return this._invoke(\"throw\", arg);\n\t  };\n\t\n\t  AsyncGenerator.prototype.return = function (arg) {\n\t    return this._invoke(\"return\", arg);\n\t  };\n\t\n\t  return {\n\t    wrap: function (fn) {\n\t      return function () {\n\t        return new AsyncGenerator(fn.apply(this, arguments));\n\t      };\n\t    },\n\t    await: function (value) {\n\t      return new AwaitValue(value);\n\t    }\n\t  };\n\t}();\n\t\n\tvar classCallCheck = function (instance, Constructor) {\n\t  if (!(instance instanceof Constructor)) {\n\t    throw new TypeError(\"Cannot call a class as a function\");\n\t  }\n\t};\n\t\n\tvar createClass = function () {\n\t  function defineProperties(target, props) {\n\t    for (var i = 0; i < props.length; i++) {\n\t      var descriptor = props[i];\n\t      descriptor.enumerable = descriptor.enumerable || false;\n\t      descriptor.configurable = true;\n\t      if (\"value\" in descriptor) descriptor.writable = true;\n\t      Object.defineProperty(target, descriptor.key, descriptor);\n\t    }\n\t  }\n\t\n\t  return function (Constructor, protoProps, staticProps) {\n\t    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t    if (staticProps) defineProperties(Constructor, staticProps);\n\t    return Constructor;\n\t  };\n\t}();\n\t\n\tvar _extends = Object.assign || function (target) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    var source = arguments[i];\n\t\n\t    for (var key in source) {\n\t      if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return target;\n\t};\n\t\n\tvar inherits = function (subClass, superClass) {\n\t  if (typeof superClass !== \"function\" && superClass !== null) {\n\t    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n\t  }\n\t\n\t  subClass.prototype = Object.create(superClass && superClass.prototype, {\n\t    constructor: {\n\t      value: subClass,\n\t      enumerable: false,\n\t      writable: true,\n\t      configurable: true\n\t    }\n\t  });\n\t  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n\t};\n\t\n\tvar possibleConstructorReturn = function (self, call) {\n\t  if (!self) {\n\t    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\t  }\n\t\n\t  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n\t};\n\t\n\tvar Connector = function () {\n\t    function Connector(options) {\n\t        classCallCheck(this, Connector);\n\t\n\t        this._defaultOptions = {\n\t            auth: {\n\t                headers: {}\n\t            },\n\t            authEndpoint: '/broadcasting/auth',\n\t            broadcaster: 'pusher',\n\t            csrfToken: null,\n\t            host: null,\n\t            key: null,\n\t            namespace: 'App.Events'\n\t        };\n\t        this.setOptions(options);\n\t        this.connect();\n\t    }\n\t\n\t    createClass(Connector, [{\n\t        key: 'setOptions',\n\t        value: function setOptions(options) {\n\t            this.options = _extends(this._defaultOptions, options);\n\t            if (this.csrfToken()) {\n\t                this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\n\t            }\n\t            return options;\n\t        }\n\t    }, {\n\t        key: 'csrfToken',\n\t        value: function csrfToken() {\n\t            var selector = void 0;\n\t            if (window && window['Laravel'] && window['Laravel'].csrfToken) {\n\t                return window['Laravel'].csrfToken;\n\t            } else if (this.options.csrfToken) {\n\t                return this.options.csrfToken;\n\t            } else if (typeof document !== 'undefined' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n\t                return selector.getAttribute('content');\n\t            }\n\t            return null;\n\t        }\n\t    }]);\n\t    return Connector;\n\t}();\n\t\n\tvar Channel = function () {\n\t    function Channel() {\n\t        classCallCheck(this, Channel);\n\t    }\n\t\n\t    createClass(Channel, [{\n\t        key: 'notification',\n\t        value: function notification(callback) {\n\t            return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n\t        }\n\t    }, {\n\t        key: 'listenForWhisper',\n\t        value: function listenForWhisper(event, callback) {\n\t            return this.listen('.client-' + event, callback);\n\t        }\n\t    }]);\n\t    return Channel;\n\t}();\n\t\n\tvar EventFormatter = function () {\n\t    function EventFormatter(namespace) {\n\t        classCallCheck(this, EventFormatter);\n\t\n\t        this.setNamespace(namespace);\n\t    }\n\t\n\t    createClass(EventFormatter, [{\n\t        key: 'format',\n\t        value: function format(event) {\n\t            if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n\t                return event.substr(1);\n\t            } else if (this.namespace) {\n\t                event = this.namespace + '.' + event;\n\t            }\n\t            return event.replace(/\\./g, '\\\\');\n\t        }\n\t    }, {\n\t        key: 'setNamespace',\n\t        value: function setNamespace(value) {\n\t            this.namespace = value;\n\t        }\n\t    }]);\n\t    return EventFormatter;\n\t}();\n\t\n\tvar PusherChannel = function (_Channel) {\n\t    inherits(PusherChannel, _Channel);\n\t\n\t    function PusherChannel(pusher, name, options) {\n\t        classCallCheck(this, PusherChannel);\n\t\n\t        var _this = possibleConstructorReturn(this, (PusherChannel.__proto__ || Object.getPrototypeOf(PusherChannel)).call(this));\n\t\n\t        _this.name = name;\n\t        _this.pusher = pusher;\n\t        _this.options = options;\n\t        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\t        _this.subscribe();\n\t        return _this;\n\t    }\n\t\n\t    createClass(PusherChannel, [{\n\t        key: 'subscribe',\n\t        value: function subscribe() {\n\t            this.subscription = this.pusher.subscribe(this.name);\n\t        }\n\t    }, {\n\t        key: 'unsubscribe',\n\t        value: function unsubscribe() {\n\t            this.pusher.unsubscribe(this.name);\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(event, callback) {\n\t            this.on(this.eventFormatter.format(event), callback);\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'stopListening',\n\t        value: function stopListening(event) {\n\t            this.subscription.unbind(this.eventFormatter.format(event));\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(event, callback) {\n\t            this.subscription.bind(event, callback);\n\t            return this;\n\t        }\n\t    }]);\n\t    return PusherChannel;\n\t}(Channel);\n\t\n\tvar PusherPrivateChannel = function (_PusherChannel) {\n\t    inherits(PusherPrivateChannel, _PusherChannel);\n\t\n\t    function PusherPrivateChannel() {\n\t        classCallCheck(this, PusherPrivateChannel);\n\t        return possibleConstructorReturn(this, (PusherPrivateChannel.__proto__ || Object.getPrototypeOf(PusherPrivateChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(PusherPrivateChannel, [{\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n\t            return this;\n\t        }\n\t    }]);\n\t    return PusherPrivateChannel;\n\t}(PusherChannel);\n\t\n\tvar PusherPresenceChannel = function (_PusherChannel) {\n\t    inherits(PusherPresenceChannel, _PusherChannel);\n\t\n\t    function PusherPresenceChannel() {\n\t        classCallCheck(this, PusherPresenceChannel);\n\t        return possibleConstructorReturn(this, (PusherPresenceChannel.__proto__ || Object.getPrototypeOf(PusherPresenceChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(PusherPresenceChannel, [{\n\t        key: 'here',\n\t        value: function here(callback) {\n\t            this.on('pusher:subscription_succeeded', function (data) {\n\t                callback(Object.keys(data.members).map(function (k) {\n\t                    return data.members[k];\n\t                }));\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'joining',\n\t        value: function joining(callback) {\n\t            this.on('pusher:member_added', function (member) {\n\t                callback(member.info);\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'leaving',\n\t        value: function leaving(callback) {\n\t            this.on('pusher:member_removed', function (member) {\n\t                callback(member.info);\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n\t            return this;\n\t        }\n\t    }]);\n\t    return PusherPresenceChannel;\n\t}(PusherChannel);\n\t\n\tvar SocketIoChannel = function (_Channel) {\n\t    inherits(SocketIoChannel, _Channel);\n\t\n\t    function SocketIoChannel(socket, name, options) {\n\t        classCallCheck(this, SocketIoChannel);\n\t\n\t        var _this = possibleConstructorReturn(this, (SocketIoChannel.__proto__ || Object.getPrototypeOf(SocketIoChannel)).call(this));\n\t\n\t        _this.events = {};\n\t        _this.name = name;\n\t        _this.socket = socket;\n\t        _this.options = options;\n\t        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\t        _this.subscribe();\n\t        _this.configureReconnector();\n\t        return _this;\n\t    }\n\t\n\t    createClass(SocketIoChannel, [{\n\t        key: 'subscribe',\n\t        value: function subscribe() {\n\t            this.socket.emit('subscribe', {\n\t                channel: this.name,\n\t                auth: this.options.auth || {}\n\t            });\n\t        }\n\t    }, {\n\t        key: 'unsubscribe',\n\t        value: function unsubscribe() {\n\t            this.unbind();\n\t            this.socket.emit('unsubscribe', {\n\t                channel: this.name,\n\t                auth: this.options.auth || {}\n\t            });\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(event, callback) {\n\t            this.on(this.eventFormatter.format(event), callback);\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'on',\n\t        value: function on(event, callback) {\n\t            var _this2 = this;\n\t\n\t            var listener = function listener(channel, data) {\n\t                if (_this2.name == channel) {\n\t                    callback(data);\n\t                }\n\t            };\n\t            this.socket.on(event, listener);\n\t            this.bind(event, listener);\n\t        }\n\t    }, {\n\t        key: 'configureReconnector',\n\t        value: function configureReconnector() {\n\t            var _this3 = this;\n\t\n\t            var listener = function listener() {\n\t                _this3.subscribe();\n\t            };\n\t            this.socket.on('reconnect', listener);\n\t            this.bind('reconnect', listener);\n\t        }\n\t    }, {\n\t        key: 'bind',\n\t        value: function bind(event, callback) {\n\t            this.events[event] = this.events[event] || [];\n\t            this.events[event].push(callback);\n\t        }\n\t    }, {\n\t        key: 'unbind',\n\t        value: function unbind() {\n\t            var _this4 = this;\n\t\n\t            Object.keys(this.events).forEach(function (event) {\n\t                _this4.events[event].forEach(function (callback) {\n\t                    _this4.socket.removeListener(event, callback);\n\t                });\n\t                delete _this4.events[event];\n\t            });\n\t        }\n\t    }]);\n\t    return SocketIoChannel;\n\t}(Channel);\n\t\n\tvar SocketIoPrivateChannel = function (_SocketIoChannel) {\n\t    inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\t\n\t    function SocketIoPrivateChannel() {\n\t        classCallCheck(this, SocketIoPrivateChannel);\n\t        return possibleConstructorReturn(this, (SocketIoPrivateChannel.__proto__ || Object.getPrototypeOf(SocketIoPrivateChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(SocketIoPrivateChannel, [{\n\t        key: 'whisper',\n\t        value: function whisper(eventName, data) {\n\t            this.socket.emit('client event', {\n\t                channel: this.name,\n\t                event: 'client-' + eventName,\n\t                data: data\n\t            });\n\t            return this;\n\t        }\n\t    }]);\n\t    return SocketIoPrivateChannel;\n\t}(SocketIoChannel);\n\t\n\tvar SocketIoPresenceChannel = function (_SocketIoPrivateChann) {\n\t    inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\t\n\t    function SocketIoPresenceChannel() {\n\t        classCallCheck(this, SocketIoPresenceChannel);\n\t        return possibleConstructorReturn(this, (SocketIoPresenceChannel.__proto__ || Object.getPrototypeOf(SocketIoPresenceChannel)).apply(this, arguments));\n\t    }\n\t\n\t    createClass(SocketIoPresenceChannel, [{\n\t        key: 'here',\n\t        value: function here(callback) {\n\t            this.on('presence:subscribed', function (members) {\n\t                callback(members.map(function (m) {\n\t                    return m.user_info;\n\t                }));\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'joining',\n\t        value: function joining(callback) {\n\t            this.on('presence:joining', function (member) {\n\t                return callback(member.user_info);\n\t            });\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'leaving',\n\t        value: function leaving(callback) {\n\t            this.on('presence:leaving', function (member) {\n\t                return callback(member.user_info);\n\t            });\n\t            return this;\n\t        }\n\t    }]);\n\t    return SocketIoPresenceChannel;\n\t}(SocketIoPrivateChannel);\n\t\n\tvar PusherConnector = function (_Connector) {\n\t    inherits(PusherConnector, _Connector);\n\t\n\t    function PusherConnector() {\n\t        var _ref;\n\t\n\t        classCallCheck(this, PusherConnector);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        var _this = possibleConstructorReturn(this, (_ref = PusherConnector.__proto__ || Object.getPrototypeOf(PusherConnector)).call.apply(_ref, [this].concat(args)));\n\t\n\t        _this.channels = {};\n\t        return _this;\n\t    }\n\t\n\t    createClass(PusherConnector, [{\n\t        key: 'connect',\n\t        value: function connect() {\n\t            this.pusher = new Pusher(this.options.key, this.options);\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(name, event, callback) {\n\t            return this.channel(name).listen(event, callback);\n\t        }\n\t    }, {\n\t        key: 'channel',\n\t        value: function channel(name) {\n\t            if (!this.channels[name]) {\n\t                this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n\t            }\n\t            return this.channels[name];\n\t        }\n\t    }, {\n\t        key: 'privateChannel',\n\t        value: function privateChannel(name) {\n\t            if (!this.channels['private-' + name]) {\n\t                this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n\t            }\n\t            return this.channels['private-' + name];\n\t        }\n\t    }, {\n\t        key: 'presenceChannel',\n\t        value: function presenceChannel(name) {\n\t            if (!this.channels['presence-' + name]) {\n\t                this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n\t            }\n\t            return this.channels['presence-' + name];\n\t        }\n\t    }, {\n\t        key: 'leave',\n\t        value: function leave(name) {\n\t            var _this2 = this;\n\t\n\t            var channels = [name, 'private-' + name, 'presence-' + name];\n\t            channels.forEach(function (name, index) {\n\t                if (_this2.channels[name]) {\n\t                    _this2.channels[name].unsubscribe();\n\t                    delete _this2.channels[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'socketId',\n\t        value: function socketId() {\n\t            return this.pusher.connection.socket_id;\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.pusher.disconnect();\n\t        }\n\t    }]);\n\t    return PusherConnector;\n\t}(Connector);\n\t\n\tvar SocketIoConnector = function (_Connector) {\n\t    inherits(SocketIoConnector, _Connector);\n\t\n\t    function SocketIoConnector() {\n\t        var _ref;\n\t\n\t        classCallCheck(this, SocketIoConnector);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        var _this = possibleConstructorReturn(this, (_ref = SocketIoConnector.__proto__ || Object.getPrototypeOf(SocketIoConnector)).call.apply(_ref, [this].concat(args)));\n\t\n\t        _this.channels = {};\n\t        return _this;\n\t    }\n\t\n\t    createClass(SocketIoConnector, [{\n\t        key: 'connect',\n\t        value: function connect() {\n\t            this.socket = io(this.options.host, this.options);\n\t            return this.socket;\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(name, event, callback) {\n\t            return this.channel(name).listen(event, callback);\n\t        }\n\t    }, {\n\t        key: 'channel',\n\t        value: function channel(name) {\n\t            if (!this.channels[name]) {\n\t                this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n\t            }\n\t            return this.channels[name];\n\t        }\n\t    }, {\n\t        key: 'privateChannel',\n\t        value: function privateChannel(name) {\n\t            if (!this.channels['private-' + name]) {\n\t                this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n\t            }\n\t            return this.channels['private-' + name];\n\t        }\n\t    }, {\n\t        key: 'presenceChannel',\n\t        value: function presenceChannel(name) {\n\t            if (!this.channels['presence-' + name]) {\n\t                this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n\t            }\n\t            return this.channels['presence-' + name];\n\t        }\n\t    }, {\n\t        key: 'leave',\n\t        value: function leave(name) {\n\t            var _this2 = this;\n\t\n\t            var channels = [name, 'private-' + name, 'presence-' + name];\n\t            channels.forEach(function (name) {\n\t                if (_this2.channels[name]) {\n\t                    _this2.channels[name].unsubscribe();\n\t                    delete _this2.channels[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'socketId',\n\t        value: function socketId() {\n\t            return this.socket.id;\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.socket.disconnect();\n\t        }\n\t    }]);\n\t    return SocketIoConnector;\n\t}(Connector);\n\t\n\tvar Echo = function () {\n\t    function Echo(options) {\n\t        classCallCheck(this, Echo);\n\t\n\t        this.options = options;\n\t        if (typeof Vue === 'function' && Vue.http) {\n\t            this.registerVueRequestInterceptor();\n\t        }\n\t        if (typeof axios === 'function') {\n\t            this.registerAxiosRequestInterceptor();\n\t        }\n\t        if (typeof jQuery === 'function') {\n\t            this.registerjQueryAjaxSetup();\n\t        }\n\t        if (this.options.broadcaster == 'pusher') {\n\t            this.connector = new PusherConnector(this.options);\n\t        } else if (this.options.broadcaster == 'socket.io') {\n\t            this.connector = new SocketIoConnector(this.options);\n\t        }\n\t    }\n\t\n\t    createClass(Echo, [{\n\t        key: 'registerVueRequestInterceptor',\n\t        value: function registerVueRequestInterceptor() {\n\t            var _this = this;\n\t\n\t            Vue.http.interceptors.push(function (request, next) {\n\t                if (_this.socketId()) {\n\t                    request.headers.set('X-Socket-ID', _this.socketId());\n\t                }\n\t                next();\n\t            });\n\t        }\n\t    }, {\n\t        key: 'registerAxiosRequestInterceptor',\n\t        value: function registerAxiosRequestInterceptor() {\n\t            var _this2 = this;\n\t\n\t            axios.interceptors.request.use(function (config) {\n\t                if (_this2.socketId()) {\n\t                    config.headers['X-Socket-Id'] = _this2.socketId();\n\t                }\n\t                return config;\n\t            });\n\t        }\n\t    }, {\n\t        key: 'registerjQueryAjaxSetup',\n\t        value: function registerjQueryAjaxSetup() {\n\t            var _this3 = this;\n\t\n\t            if (typeof jQuery.ajax != 'undefined') {\n\t                jQuery.ajaxSetup({\n\t                    beforeSend: function beforeSend(xhr) {\n\t                        if (_this3.socketId()) {\n\t                            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'listen',\n\t        value: function listen(channel, event, callback) {\n\t            return this.connector.listen(channel, event, callback);\n\t        }\n\t    }, {\n\t        key: 'channel',\n\t        value: function channel(_channel) {\n\t            return this.connector.channel(_channel);\n\t        }\n\t    }, {\n\t        key: 'private',\n\t        value: function _private(channel) {\n\t            return this.connector.privateChannel(channel);\n\t        }\n\t    }, {\n\t        key: 'join',\n\t        value: function join(channel) {\n\t            return this.connector.presenceChannel(channel);\n\t        }\n\t    }, {\n\t        key: 'leave',\n\t        value: function leave(channel) {\n\t            this.connector.leave(channel);\n\t        }\n\t    }, {\n\t        key: 'socketId',\n\t        value: function socketId() {\n\t            return this.connector.socketId();\n\t        }\n\t    }, {\n\t        key: 'disconnect',\n\t        value: function disconnect() {\n\t            this.connector.disconnect();\n\t        }\n\t    }]);\n\t    return Echo;\n\t}();\n\t\n\tmodule.exports = Echo;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 02868c44c1c813ff768f","import Echo from 'laravel-echo';\n\nexport default {\n    install(Vue, options) {\n        if (!options) {\n            throw new Error(\"[Vue-Echo] cannot locate options\");\n        }\n\n        if (typeof options !== 'object') {\n            throw new Error(\"[Vue-Echo] cannot initiate options\");\n        }\n\n        if(typeof options.socketId == 'function')\n        {\n            Vue.prototype.$echo = options;\n        }\n        else\n        {\n            Vue.prototype.$echo = new Echo(options);\n        }\n\n        Vue.mixin({\n            created(){\n                let channel = this.$options['channel'];\n\n                if(channel)\n                {\n                    if(channel.startsWith('private:'))\n                    {\n                        this.channel = this.$echo.private(channel.replace('private:', ''))\n                    }\n                    else if(channel.startsWith('presence:'))\n                    {\n                        this.channel = this.$echo.join(channel.replace('presence:', ''))\n                    }\n                    else\n                    {\n                        this.channel = this.$echo.channel(channel);\n                    }\n\n                    let events = this.$options['echo'];\n\n                    if(events)\n                    {\n                        Object.keys(events).forEach(function(key){\n                            // Bind the VM as second parameter\n                            this.channel.listen(key, (payload) => {\n                                events[key](payload, this);\n                            });\n                        }, this);\n                    }\n                }\n            },\n            beforeDestroy(){\n                if(this.$options['channel']){\n                    this.channel.unsubscribe();\n                }\n            }\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./vue-echo.js","var asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar Connector = function () {\n    function Connector(options) {\n        classCallCheck(this, Connector);\n\n        this._defaultOptions = {\n            auth: {\n                headers: {}\n            },\n            authEndpoint: '/broadcasting/auth',\n            broadcaster: 'pusher',\n            csrfToken: null,\n            host: null,\n            key: null,\n            namespace: 'App.Events'\n        };\n        this.setOptions(options);\n        this.connect();\n    }\n\n    createClass(Connector, [{\n        key: 'setOptions',\n        value: function setOptions(options) {\n            this.options = _extends(this._defaultOptions, options);\n            if (this.csrfToken()) {\n                this.options.auth.headers['X-CSRF-TOKEN'] = this.csrfToken();\n            }\n            return options;\n        }\n    }, {\n        key: 'csrfToken',\n        value: function csrfToken() {\n            var selector = void 0;\n            if (window && window['Laravel'] && window['Laravel'].csrfToken) {\n                return window['Laravel'].csrfToken;\n            } else if (this.options.csrfToken) {\n                return this.options.csrfToken;\n            } else if (typeof document !== 'undefined' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n                return selector.getAttribute('content');\n            }\n            return null;\n        }\n    }]);\n    return Connector;\n}();\n\nvar Channel = function () {\n    function Channel() {\n        classCallCheck(this, Channel);\n    }\n\n    createClass(Channel, [{\n        key: 'notification',\n        value: function notification(callback) {\n            return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n        }\n    }, {\n        key: 'listenForWhisper',\n        value: function listenForWhisper(event, callback) {\n            return this.listen('.client-' + event, callback);\n        }\n    }]);\n    return Channel;\n}();\n\nvar EventFormatter = function () {\n    function EventFormatter(namespace) {\n        classCallCheck(this, EventFormatter);\n\n        this.setNamespace(namespace);\n    }\n\n    createClass(EventFormatter, [{\n        key: 'format',\n        value: function format(event) {\n            if (event.charAt(0) === '.' || event.charAt(0) === '\\\\') {\n                return event.substr(1);\n            } else if (this.namespace) {\n                event = this.namespace + '.' + event;\n            }\n            return event.replace(/\\./g, '\\\\');\n        }\n    }, {\n        key: 'setNamespace',\n        value: function setNamespace(value) {\n            this.namespace = value;\n        }\n    }]);\n    return EventFormatter;\n}();\n\nvar PusherChannel = function (_Channel) {\n    inherits(PusherChannel, _Channel);\n\n    function PusherChannel(pusher, name, options) {\n        classCallCheck(this, PusherChannel);\n\n        var _this = possibleConstructorReturn(this, (PusherChannel.__proto__ || Object.getPrototypeOf(PusherChannel)).call(this));\n\n        _this.name = name;\n        _this.pusher = pusher;\n        _this.options = options;\n        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n        _this.subscribe();\n        return _this;\n    }\n\n    createClass(PusherChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {\n            this.subscription = this.pusher.subscribe(this.name);\n        }\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {\n            this.pusher.unsubscribe(this.name);\n        }\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            this.on(this.eventFormatter.format(event), callback);\n            return this;\n        }\n    }, {\n        key: 'stopListening',\n        value: function stopListening(event) {\n            this.subscription.unbind(this.eventFormatter.format(event));\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            this.subscription.bind(event, callback);\n            return this;\n        }\n    }]);\n    return PusherChannel;\n}(Channel);\n\nvar PusherPrivateChannel = function (_PusherChannel) {\n    inherits(PusherPrivateChannel, _PusherChannel);\n\n    function PusherPrivateChannel() {\n        classCallCheck(this, PusherPrivateChannel);\n        return possibleConstructorReturn(this, (PusherPrivateChannel.__proto__ || Object.getPrototypeOf(PusherPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(PusherPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n            return this;\n        }\n    }]);\n    return PusherPrivateChannel;\n}(PusherChannel);\n\nvar PusherPresenceChannel = function (_PusherChannel) {\n    inherits(PusherPresenceChannel, _PusherChannel);\n\n    function PusherPresenceChannel() {\n        classCallCheck(this, PusherPresenceChannel);\n        return possibleConstructorReturn(this, (PusherPresenceChannel.__proto__ || Object.getPrototypeOf(PusherPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(PusherPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            this.on('pusher:subscription_succeeded', function (data) {\n                callback(Object.keys(data.members).map(function (k) {\n                    return data.members[k];\n                }));\n            });\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            this.on('pusher:member_added', function (member) {\n                callback(member.info);\n            });\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            this.on('pusher:member_removed', function (member) {\n                callback(member.info);\n            });\n            return this;\n        }\n    }, {\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.pusher.channels.channels[this.name].trigger('client-' + eventName, data);\n            return this;\n        }\n    }]);\n    return PusherPresenceChannel;\n}(PusherChannel);\n\nvar SocketIoChannel = function (_Channel) {\n    inherits(SocketIoChannel, _Channel);\n\n    function SocketIoChannel(socket, name, options) {\n        classCallCheck(this, SocketIoChannel);\n\n        var _this = possibleConstructorReturn(this, (SocketIoChannel.__proto__ || Object.getPrototypeOf(SocketIoChannel)).call(this));\n\n        _this.events = {};\n        _this.name = name;\n        _this.socket = socket;\n        _this.options = options;\n        _this.eventFormatter = new EventFormatter(_this.options.namespace);\n        _this.subscribe();\n        _this.configureReconnector();\n        return _this;\n    }\n\n    createClass(SocketIoChannel, [{\n        key: 'subscribe',\n        value: function subscribe() {\n            this.socket.emit('subscribe', {\n                channel: this.name,\n                auth: this.options.auth || {}\n            });\n        }\n    }, {\n        key: 'unsubscribe',\n        value: function unsubscribe() {\n            this.unbind();\n            this.socket.emit('unsubscribe', {\n                channel: this.name,\n                auth: this.options.auth || {}\n            });\n        }\n    }, {\n        key: 'listen',\n        value: function listen(event, callback) {\n            this.on(this.eventFormatter.format(event), callback);\n            return this;\n        }\n    }, {\n        key: 'on',\n        value: function on(event, callback) {\n            var _this2 = this;\n\n            var listener = function listener(channel, data) {\n                if (_this2.name == channel) {\n                    callback(data);\n                }\n            };\n            this.socket.on(event, listener);\n            this.bind(event, listener);\n        }\n    }, {\n        key: 'configureReconnector',\n        value: function configureReconnector() {\n            var _this3 = this;\n\n            var listener = function listener() {\n                _this3.subscribe();\n            };\n            this.socket.on('reconnect', listener);\n            this.bind('reconnect', listener);\n        }\n    }, {\n        key: 'bind',\n        value: function bind(event, callback) {\n            this.events[event] = this.events[event] || [];\n            this.events[event].push(callback);\n        }\n    }, {\n        key: 'unbind',\n        value: function unbind() {\n            var _this4 = this;\n\n            Object.keys(this.events).forEach(function (event) {\n                _this4.events[event].forEach(function (callback) {\n                    _this4.socket.removeListener(event, callback);\n                });\n                delete _this4.events[event];\n            });\n        }\n    }]);\n    return SocketIoChannel;\n}(Channel);\n\nvar SocketIoPrivateChannel = function (_SocketIoChannel) {\n    inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n    function SocketIoPrivateChannel() {\n        classCallCheck(this, SocketIoPrivateChannel);\n        return possibleConstructorReturn(this, (SocketIoPrivateChannel.__proto__ || Object.getPrototypeOf(SocketIoPrivateChannel)).apply(this, arguments));\n    }\n\n    createClass(SocketIoPrivateChannel, [{\n        key: 'whisper',\n        value: function whisper(eventName, data) {\n            this.socket.emit('client event', {\n                channel: this.name,\n                event: 'client-' + eventName,\n                data: data\n            });\n            return this;\n        }\n    }]);\n    return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\nvar SocketIoPresenceChannel = function (_SocketIoPrivateChann) {\n    inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n    function SocketIoPresenceChannel() {\n        classCallCheck(this, SocketIoPresenceChannel);\n        return possibleConstructorReturn(this, (SocketIoPresenceChannel.__proto__ || Object.getPrototypeOf(SocketIoPresenceChannel)).apply(this, arguments));\n    }\n\n    createClass(SocketIoPresenceChannel, [{\n        key: 'here',\n        value: function here(callback) {\n            this.on('presence:subscribed', function (members) {\n                callback(members.map(function (m) {\n                    return m.user_info;\n                }));\n            });\n            return this;\n        }\n    }, {\n        key: 'joining',\n        value: function joining(callback) {\n            this.on('presence:joining', function (member) {\n                return callback(member.user_info);\n            });\n            return this;\n        }\n    }, {\n        key: 'leaving',\n        value: function leaving(callback) {\n            this.on('presence:leaving', function (member) {\n                return callback(member.user_info);\n            });\n            return this;\n        }\n    }]);\n    return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\nvar PusherConnector = function (_Connector) {\n    inherits(PusherConnector, _Connector);\n\n    function PusherConnector() {\n        var _ref;\n\n        classCallCheck(this, PusherConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = PusherConnector.__proto__ || Object.getPrototypeOf(PusherConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(PusherConnector, [{\n        key: 'connect',\n        value: function connect() {\n            this.pusher = new Pusher(this.options.key, this.options);\n        }\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return this.channel(name).listen(event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            if (!this.channels[name]) {\n                this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n            }\n            return this.channels[name];\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            if (!this.channels['private-' + name]) {\n                this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n            }\n            return this.channels['private-' + name];\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            if (!this.channels['presence-' + name]) {\n                this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n            }\n            return this.channels['presence-' + name];\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {\n            var _this2 = this;\n\n            var channels = [name, 'private-' + name, 'presence-' + name];\n            channels.forEach(function (name, index) {\n                if (_this2.channels[name]) {\n                    _this2.channels[name].unsubscribe();\n                    delete _this2.channels[name];\n                }\n            });\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.pusher.connection.socket_id;\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.pusher.disconnect();\n        }\n    }]);\n    return PusherConnector;\n}(Connector);\n\nvar SocketIoConnector = function (_Connector) {\n    inherits(SocketIoConnector, _Connector);\n\n    function SocketIoConnector() {\n        var _ref;\n\n        classCallCheck(this, SocketIoConnector);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = possibleConstructorReturn(this, (_ref = SocketIoConnector.__proto__ || Object.getPrototypeOf(SocketIoConnector)).call.apply(_ref, [this].concat(args)));\n\n        _this.channels = {};\n        return _this;\n    }\n\n    createClass(SocketIoConnector, [{\n        key: 'connect',\n        value: function connect() {\n            this.socket = io(this.options.host, this.options);\n            return this.socket;\n        }\n    }, {\n        key: 'listen',\n        value: function listen(name, event, callback) {\n            return this.channel(name).listen(event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(name) {\n            if (!this.channels[name]) {\n                this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n            }\n            return this.channels[name];\n        }\n    }, {\n        key: 'privateChannel',\n        value: function privateChannel(name) {\n            if (!this.channels['private-' + name]) {\n                this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n            }\n            return this.channels['private-' + name];\n        }\n    }, {\n        key: 'presenceChannel',\n        value: function presenceChannel(name) {\n            if (!this.channels['presence-' + name]) {\n                this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n            }\n            return this.channels['presence-' + name];\n        }\n    }, {\n        key: 'leave',\n        value: function leave(name) {\n            var _this2 = this;\n\n            var channels = [name, 'private-' + name, 'presence-' + name];\n            channels.forEach(function (name) {\n                if (_this2.channels[name]) {\n                    _this2.channels[name].unsubscribe();\n                    delete _this2.channels[name];\n                }\n            });\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.socket.id;\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.socket.disconnect();\n        }\n    }]);\n    return SocketIoConnector;\n}(Connector);\n\nvar Echo = function () {\n    function Echo(options) {\n        classCallCheck(this, Echo);\n\n        this.options = options;\n        if (typeof Vue === 'function' && Vue.http) {\n            this.registerVueRequestInterceptor();\n        }\n        if (typeof axios === 'function') {\n            this.registerAxiosRequestInterceptor();\n        }\n        if (typeof jQuery === 'function') {\n            this.registerjQueryAjaxSetup();\n        }\n        if (this.options.broadcaster == 'pusher') {\n            this.connector = new PusherConnector(this.options);\n        } else if (this.options.broadcaster == 'socket.io') {\n            this.connector = new SocketIoConnector(this.options);\n        }\n    }\n\n    createClass(Echo, [{\n        key: 'registerVueRequestInterceptor',\n        value: function registerVueRequestInterceptor() {\n            var _this = this;\n\n            Vue.http.interceptors.push(function (request, next) {\n                if (_this.socketId()) {\n                    request.headers.set('X-Socket-ID', _this.socketId());\n                }\n                next();\n            });\n        }\n    }, {\n        key: 'registerAxiosRequestInterceptor',\n        value: function registerAxiosRequestInterceptor() {\n            var _this2 = this;\n\n            axios.interceptors.request.use(function (config) {\n                if (_this2.socketId()) {\n                    config.headers['X-Socket-Id'] = _this2.socketId();\n                }\n                return config;\n            });\n        }\n    }, {\n        key: 'registerjQueryAjaxSetup',\n        value: function registerjQueryAjaxSetup() {\n            var _this3 = this;\n\n            if (typeof jQuery.ajax != 'undefined') {\n                jQuery.ajaxSetup({\n                    beforeSend: function beforeSend(xhr) {\n                        if (_this3.socketId()) {\n                            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n                        }\n                    }\n                });\n            }\n        }\n    }, {\n        key: 'listen',\n        value: function listen(channel, event, callback) {\n            return this.connector.listen(channel, event, callback);\n        }\n    }, {\n        key: 'channel',\n        value: function channel(_channel) {\n            return this.connector.channel(_channel);\n        }\n    }, {\n        key: 'private',\n        value: function _private(channel) {\n            return this.connector.privateChannel(channel);\n        }\n    }, {\n        key: 'join',\n        value: function join(channel) {\n            return this.connector.presenceChannel(channel);\n        }\n    }, {\n        key: 'leave',\n        value: function leave(channel) {\n            this.connector.leave(channel);\n        }\n    }, {\n        key: 'socketId',\n        value: function socketId() {\n            return this.connector.socketId();\n        }\n    }, {\n        key: 'disconnect',\n        value: function disconnect() {\n            this.connector.disconnect();\n        }\n    }]);\n    return Echo;\n}();\n\nmodule.exports = Echo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/laravel-echo/dist/echo.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}